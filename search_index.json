[["index.html", "Data Exploration in R Welcome", " Data Exploration in R Prof. Dr. Jan Kirenz 2020-11-22 Welcome This book provides an introduction to data exploration in R. To use the code in this book, activate the following packages: library(tidyverse) library(skimr) library(gt) To illustrate the different data exploration methods, we use the dataset wage, which contains wage and other data for a group of 3000 male workers in the Mid-Atlantic region (James et al. (2000)). library(tidyverse) wage_df &lt;- read_csv(&quot;https://raw.githubusercontent.com/kirenz/datasets/master/wage.csv&quot;) The data frame includes 3000 observations on the following 11 variables: X1: An ID variable year: Year that wage information was recorded age: Age of worker maritl: A factor with levels: 1. Never Married 2. Married 3. Widowed 4. Divorced and 5. Separated indicating marital status race: A factor with levels: 1. White 2. Black 3. Asian and 4. Other indicating race education: A factor with levels: 1. &lt; HS Grad 2. HS Grad 3. Some College 4. College Grad and 5. Advanced Degree indicating education level region: Region of the country (mid-atlantic only) jobclass: A factor with levels: 1. Industrial and 2. Information indicating type of job health: A factor with levels: 1. &lt;=Good and 2. &gt;=Very Good indicating health level of worker health_ins: A factor with levels: 1. Yes and 2. No indicating whether worker has health insurance logwage: Log of workers wage wage: Workers raw wage Note that this book mainly covers the use of a collection of R packages called the tidyverse, an ecosystem of packages designed with common APIs and a shared philosophy. An R package is simply a bundle of functions, documentation, and data sets. There are about 25 packages in the tidyverse and they are especially designed for data science and share an underlying design philosophy, grammar, and data structures. This online book is licensed using the Creative Commons Attribution-NonCommercial 2.0 Generic (CC BY-NC 2.0) License. References "],["tables.html", "Chapter 1 Counts and Tables 1.1 Simple counts 1.2 Total counts 1.3 Joint proportions 1.4 Conditional proportions: columns 1.5 Conditional proportions: rows 1.6 Chi-squared Test of Independence", " Chapter 1 Counts and Tables You should use this method if the data is: Categorical In this chapter you will learn how to do some simple data explorations for categorical variables using tables (also called tables) and simple counts. 1.1 Simple counts Get an overview of the variable maritl and sort the values. We use the function gt() to print nice tables: wage_df %&gt;% count(maritl, sort = TRUE) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #ilrifkpjso .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #ilrifkpjso .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ilrifkpjso .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #ilrifkpjso .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 4px; border-top-color: #FFFFFF; border-top-width: 0; } #ilrifkpjso .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ilrifkpjso .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ilrifkpjso .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #ilrifkpjso .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #ilrifkpjso .gt_column_spanner_outer:first-child { padding-left: 0; } #ilrifkpjso .gt_column_spanner_outer:last-child { padding-right: 0; } #ilrifkpjso .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; overflow-x: hidden; display: inline-block; width: 100%; } #ilrifkpjso .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #ilrifkpjso .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #ilrifkpjso .gt_from_md > :first-child { margin-top: 0; } #ilrifkpjso .gt_from_md > :last-child { margin-bottom: 0; } #ilrifkpjso .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #ilrifkpjso .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #ilrifkpjso .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ilrifkpjso .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #ilrifkpjso .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ilrifkpjso .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #ilrifkpjso .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #ilrifkpjso .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ilrifkpjso .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ilrifkpjso .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #ilrifkpjso .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ilrifkpjso .gt_sourcenote { font-size: 90%; padding: 4px; } #ilrifkpjso .gt_left { text-align: left; } #ilrifkpjso .gt_center { text-align: center; } #ilrifkpjso .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #ilrifkpjso .gt_font_normal { font-weight: normal; } #ilrifkpjso .gt_font_bold { font-weight: bold; } #ilrifkpjso .gt_font_italic { font-style: italic; } #ilrifkpjso .gt_super { font-size: 65%; } #ilrifkpjso .gt_footnote_marks { font-style: italic; font-size: 65%; } maritl n 2. Married 2074 1. Never Married 648 4. Divorced 204 5. Separated 55 3. Widowed 19 Get an overview of the combined variables maritl and education: wage_df %&gt;% count(maritl, education) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #iwmrewmmns .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #iwmrewmmns .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #iwmrewmmns .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #iwmrewmmns .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 4px; border-top-color: #FFFFFF; border-top-width: 0; } #iwmrewmmns .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #iwmrewmmns .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #iwmrewmmns .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #iwmrewmmns .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #iwmrewmmns .gt_column_spanner_outer:first-child { padding-left: 0; } #iwmrewmmns .gt_column_spanner_outer:last-child { padding-right: 0; } #iwmrewmmns .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; overflow-x: hidden; display: inline-block; width: 100%; } #iwmrewmmns .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #iwmrewmmns .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #iwmrewmmns .gt_from_md > :first-child { margin-top: 0; } #iwmrewmmns .gt_from_md > :last-child { margin-bottom: 0; } #iwmrewmmns .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #iwmrewmmns .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #iwmrewmmns .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #iwmrewmmns .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #iwmrewmmns .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #iwmrewmmns .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #iwmrewmmns .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #iwmrewmmns .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #iwmrewmmns .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #iwmrewmmns .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #iwmrewmmns .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #iwmrewmmns .gt_sourcenote { font-size: 90%; padding: 4px; } #iwmrewmmns .gt_left { text-align: left; } #iwmrewmmns .gt_center { text-align: center; } #iwmrewmmns .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #iwmrewmmns .gt_font_normal { font-weight: normal; } #iwmrewmmns .gt_font_bold { font-weight: bold; } #iwmrewmmns .gt_font_italic { font-style: italic; } #iwmrewmmns .gt_super { font-size: 65%; } #iwmrewmmns .gt_footnote_marks { font-style: italic; font-size: 65%; } maritl education n 1. Never Married 1. &lt; HS Grad 62 1. Never Married 2. HS Grad 219 1. Never Married 3. Some College 164 1. Never Married 4. College Grad 143 1. Never Married 5. Advanced Degree 60 2. Married 1. &lt; HS Grad 174 2. Married 2. HS Grad 651 2. Married 3. Some College 421 2. Married 4. College Grad 487 2. Married 5. Advanced Degree 341 3. Widowed 1. &lt; HS Grad 2 3. Widowed 2. HS Grad 8 3. Widowed 3. Some College 2 3. Widowed 4. College Grad 5 3. Widowed 5. Advanced Degree 2 4. Divorced 1. &lt; HS Grad 16 4. Divorced 2. HS Grad 73 4. Divorced 3. Some College 52 4. Divorced 4. College Grad 41 4. Divorced 5. Advanced Degree 22 5. Separated 1. &lt; HS Grad 14 5. Separated 2. HS Grad 20 5. Separated 3. Some College 11 5. Separated 4. College Grad 9 5. Separated 5. Advanced Degree 1 Obtain the sum of a quantitative variable (wage) for the different levels of a categorical variable (maritl): wage_df %&gt;% count(maritl, wt = wage, name = &quot;Wage_sum&quot;) %&gt;% gt() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #rctqlszdxo .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #rctqlszdxo .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #rctqlszdxo .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #rctqlszdxo .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 4px; border-top-color: #FFFFFF; border-top-width: 0; } #rctqlszdxo .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #rctqlszdxo .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #rctqlszdxo .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #rctqlszdxo .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #rctqlszdxo .gt_column_spanner_outer:first-child { padding-left: 0; } #rctqlszdxo .gt_column_spanner_outer:last-child { padding-right: 0; } #rctqlszdxo .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; overflow-x: hidden; display: inline-block; width: 100%; } #rctqlszdxo .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #rctqlszdxo .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #rctqlszdxo .gt_from_md > :first-child { margin-top: 0; } #rctqlszdxo .gt_from_md > :last-child { margin-bottom: 0; } #rctqlszdxo .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #rctqlszdxo .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #rctqlszdxo .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #rctqlszdxo .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #rctqlszdxo .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #rctqlszdxo .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #rctqlszdxo .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #rctqlszdxo .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #rctqlszdxo .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #rctqlszdxo .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #rctqlszdxo .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #rctqlszdxo .gt_sourcenote { font-size: 90%; padding: 4px; } #rctqlszdxo .gt_left { text-align: left; } #rctqlszdxo .gt_center { text-align: center; } #rctqlszdxo .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #rctqlszdxo .gt_font_normal { font-weight: normal; } #rctqlszdxo .gt_font_bold { font-weight: bold; } #rctqlszdxo .gt_font_italic { font-style: italic; } #rctqlszdxo .gt_super { font-size: 65%; } #rctqlszdxo .gt_footnote_marks { font-style: italic; font-size: 65%; } maritl Wage_sum 1. Never Married 60092.052 2. Married 246516.180 3. Widowed 1891.234 4. Divorced 21044.489 5. Separated 5566.868 1.2 Total counts Total counts are an useful way to represent the observations that fall into each combination of the levels of categorical variables. We create a contingency table of the two categorical variables jobclass and race and call the result tab: tab &lt;- table(wage_df$jobclass, wage_df$race) 1.3 Joint proportions We can also view the percentage of each cell in relation to the total amount of all observations (here n = 3000). Therefore, you have to simply divide the numbers from our total counts with 3.000. The following code generates tables of joint proportions: # joint proportions prop.table(tab) ## ## 1. White 2. Black 3. Asian 4. Other ## 1. Industrial 0.441666667 0.037000000 0.028666667 0.007333333 ## 2. Information 0.385000000 0.060666667 0.034666667 0.005000000 For example, around 44% of all people in the dataset are white industrial workers. 1.4 Conditional proportions: columns You also may want to know the probability that workers have a certain jobclass, given that they have a particular ethnical background. This is a so called conditional probability. Conditional probability represents the chance that one event will occur given that a second event has already occurred. The following code generates tables of conditional proportions: # conditional on columns prop.table(tab, 2) ## ## 1. White 2. Black 3. Asian 4. Other ## 1. Industrial 0.5342742 0.3788396 0.4526316 0.5945946 ## 2. Information 0.4657258 0.6211604 0.5473684 0.4054054 We performed a columnwise evaluation and are now able to answer the following question: Approximately what proportion of all white workers are industrial workers? The answer is: around 53%. 1.5 Conditional proportions: rows Now we want to obtain the probability that workers have a certain race, given their jobclass. # conditional on rows prop.table(tab, 1) ## ## 1. White 2. Black 3. Asian 4. Other ## 1. Industrial 0.85816062 0.07189119 0.05569948 0.01424870 ## 2. Information 0.79326923 0.12500000 0.07142857 0.01030220 We performed a rowwise evaluation and are now able to answer the following question: Approximately what proportion of all industrial workers are white? The answer is: around 86%. 1.6 Chi-squared Test of Independence Finally, let’s test the hypothesis whether the variable jobclass is independent of the variable race at .05 significance level. chisq.test(tab) ## ## Pearson&#39;s Chi-squared test ## ## data: tab ## X-squared = 29.331, df = 3, p-value = 1.908e-06 As the p-value is smaller than the .05 significance level, we reject the null hypothesis that the jobclass is independent of the race of the workers. "],["heatmap.html", "Chapter 2 Heatmap", " Chapter 2 Heatmap You should use this method if the data is: Categorical In this chapter you will learn how to do some simple data explorations for categorical variables using heatmaps with the function geom_bin2d() Basic plot: wage_df %&gt;% ggplot(aes(jobclass, education)) + geom_bin2d() + scale_fill_gradient(low = &quot;gray85&quot;, high = &quot;steelblue&quot;) Plot with some adjustments: wage_df %&gt;% ggplot(aes(jobclass, education)) + geom_bin2d(binwidth = c(1, 1), alpha = 0.8) + theme_classic() + scale_fill_gradient(low = &quot;gray85&quot;, high = &quot;steelblue&quot;) + labs(fill = &quot;number of\\ workers&quot;, y = &quot;Education&quot;, x = &quot;Job class&quot;) "],["barplot.html", "Chapter 3 Barplot 3.1 One variable 3.2 Two variables", " Chapter 3 Barplot You should use this method if the data is: Categorical In this chapter you will learn how to do some simple data explorations for categorical variables using barplots. 3.1 One variable wage_df %&gt;% ggplot(aes(x = maritl)) + geom_bar() 3.2 Two variables 3.2.1 Stacked barplot Absolute values: wage_df %&gt;% ggplot(aes(x = maritl, fill = education)) + geom_bar() Relative values: wage_df %&gt;% ggplot(aes(x = maritl, fill = education)) + geom_bar(position = &quot;fill&quot;) + ggtitle(&quot;Marital Status&quot;, &quot;Overview&quot;) + xlab(&quot; Marital Status&quot;) + ylab(&quot;Number of People&quot;) + theme_classic() + scale_fill_brewer(palette = &quot;Blues&quot;) + theme(legend.title = element_blank()) 3.2.2 Side-by-side barplot Basic plot: wage_df %&gt;% ggplot(aes(x = maritl, fill = education)) + geom_bar( position = &quot;dodge&quot;) Plot with some adjustments: wage_df %&gt;% ggplot(aes(x = maritl, fill = education)) + geom_bar( position = &quot;dodge&quot;) + ggtitle(&quot;Marital Status&quot;, &quot;Overview&quot;) + xlab(&quot; Marital Status&quot;) + ylab(&quot;Number of People&quot;) + theme_classic() + scale_fill_brewer(palette = &quot;Blues&quot;) + theme(legend.title = element_blank()) 3.2.3 Faceted barplot Basic plot: wage_df %&gt;% ggplot(aes(x = maritl)) + geom_bar(position = &quot;dodge&quot;) + facet_wrap(~ education) Plot with some adjustments to change our x labels using justifications): Horizontal and vertical justification have the same parameterisation, either a string (“top”, “middle”, “bottom”, “left”, “center”, “right”) or a number between 0 and 1:\" top = 1, middle = 0.5, bottom = 0 left = 0, center = 0.5, right = 1 wage_df %&gt;% ggplot(aes(x = maritl)) + geom_bar(position = &quot;dodge&quot;) + facet_wrap(~ education) + ggtitle(&quot;Marital Status&quot;, &quot;Overview&quot;) + xlab(&quot; Marital Status&quot;) + ylab(&quot;Number of People&quot;) + theme_classic() + theme(legend.title = element_blank()) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust= 1)) "],["histogram.html", "Chapter 4 Histogram 4.1 One variable 4.2 Two variables", " Chapter 4 Histogram You should use this method if the data is: Numeric 4.1 One variable 4.1.1 Basic Histogram Basic plot: wage_df %&gt;% ggplot(aes(x = wage)) + geom_histogram() 4.1.2 Bins Adjust number of bins: wage_df %&gt;% ggplot(aes(x = wage)) + geom_histogram(bins = 20) 4.1.3 Binwidth Instead of using bins, you can also change the binwidth: wage_df %&gt;% ggplot(aes(x = wage)) + geom_histogram(binwidth = 10) 4.2 Two variables 4.2.1 Faceted histogram wage_df %&gt;% ggplot(aes(x = wage)) + geom_histogram() + facet_wrap( ~ education) 4.2.2 Stacked histogram wage_df %&gt;% ggplot(aes(x = wage, fill = education)) + geom_histogram(alpha = 0.4) "],["density.html", "Chapter 5 Density plots 5.1 One variable 5.2 Two variables", " Chapter 5 Density plots You should use this method if the data is: Numeric and continuous In this chapter you will learn how to do some simple data explorations for numerical variables using density plots. 5.1 One variable wage_df %&gt;% ggplot(aes(x = wage)) + geom_density() 5.2 Two variables Combine your numeric variable with a categorical variable: wage_df %&gt;% ggplot(aes(x = wage, fill = education)) + geom_density() Make some adjustments: wage_df %&gt;% ggplot(aes(x = wage, fill = education)) + geom_density(alpha = 0.6) + scale_fill_brewer(palette = &quot;Blues&quot;) "],["boxplot.html", "Chapter 6 Boxplot 6.1 One variable 6.2 Two variables", " Chapter 6 Boxplot You should use this method if the data is: Categorical (at least ordinal) or Numerical In this chapter you will learn how to do some simple data explorations for categorical (ordinal) and numerical variables using boxplots. 6.1 One variable wage_df %&gt;% ggplot(aes( x = &quot;&quot;, y= wage)) + geom_boxplot() 6.2 Two variables wage_df %&gt;% ggplot(aes(x = education, y = wage)) + geom_boxplot() "],["scatterplot.html", "Chapter 7 Scatterplot 7.1 Two numeric variables 7.2 Two numeric, one categorical", " Chapter 7 Scatterplot You should use this method if the data is: Numerical 7.1 Two numeric variables wage_df %&gt;% ggplot(aes(x = age, y = wage)) + geom_point() Use jitter wage_df %&gt;% ggplot(aes(x = age, y = wage)) + geom_jitter() 7.2 Two numeric, one categorical wage_df %&gt;% ggplot(aes(x = age, y = wage, color = jobclass)) + geom_jitter() "],["line.html", "Chapter 8 Line graph", " Chapter 8 Line graph wage_df %&gt;% group_by(year) %&gt;% mutate(mean_wage = mean(wage, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = year, y = mean_wage)) + geom_line() "],["references.html", "References", " References James, Gareth, Daniela Witten, Trevor Hastie, and Robert Tibshirani. 2000. An introduction to Statistical Learning. Vol. 7. 10. New York: Springer. https://doi.org/10.1007/978-1-4614-7138-7. "]]
